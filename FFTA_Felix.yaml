# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Marche

# Used to describe your yaml. Useful if you have multiple files.
description: Default Final Fantasy Tactics Advance Template

game: Final Fantasy Tactics Advance
requires:
  version: 0.4.5 # Version of Archipelago required for this yaml to work as expected.

Final Fantasy Tactics Advance:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # Sets the unlock condition for the final mission
    #
    # All mission gates: The final mission is unlocked after going through every mission gate.
    # Totema Gauntlet: A series of the five Totema battles must be cleared to unlock the final mission. These are
    # unlocked alongside the mission gates. An additional five items are added to unlock them.
    mission_gates: 50
    totema: 0

  starting_units:
    # Sets the option for your starting units
    #
    # Vanilla: The same starting units as the original game
    # Shuffle: Jobs are randomized within the original starting races of the game.
    # Random: Jobs and race of the starting units are randomized
    # Balanced: Ensures two attacker jobs, two magic jobs, and two support jobs. Excludes morphers, beastmasters, and gadgeteers.
    # Random Monster: Starting units jobs and race are randomized with monster units also in the pool
    #
    # Note: Monsters are unable to change jobs, equip anything or use items.
    starting_vanilla: 0
    starting_shuffle: 0
    starting_random: 0
    starting_balanced: 50
    random_monster: 0

  starting_unit_equip:
    # Sets the equipment option for your starting units
    #
    # Basic: Units will always start with their most basic equipment
    # Randomized: The equipment load out will be random within the job's equipment
    equip_basic: 0
    equip_random: 50

  starting_abilities:
    # Sets the amount of mastered abilities for each starting unit's job. Based on percentage. 1 = 10% and 10 = 100% of abilities mastered
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    0: 0
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  job_unlock_req:
    # Sets the unlock requirements for every unit's job
    #
    # Vanilla: Job unlock requirements are the same as vanilla
    # All Unlocked: All jobs are unlocked from the start
    # All Locked: All jobs are locked. The unit must use their assigned job and cannot change
    req_vanilla: 50
    all_unlocked: 0
    all_locked: 0

  laws:
    # Enable or disable the law and judge system found in the game. JP will rarely be awarded with laws turned off.
    #
    # No Laws: Judges and laws are disabled.
    # Laws: Laws are vanilla but are enabled.
    # Random laws: Laws are enabled and are randomized among law sets.
    disable_laws: 50
    enable_laws: 0
    random_laws: 0

  randomize_enemies:
    # Randomizes the enemy units. Special units such as bosses currently are not randomized.
    #
    # Vanilla: Enemies aren't changed
    # Randomized: Enemies are randomized
    enemy_vanilla: 0
    enemy_random: 50

  scaling:
    # Sets the level scaling for enemies.
    #
    # Average Level: Enemies are scaled to the average level of your units.
    # Highest Level: Enemies are scaled to your highest level unit.
    average_level: 0
    highest_level: 50

  exp_multiplier:
    # Multiplies all exp gained.
    one: 0
    two: 50
    four: 0
    eight: 0
    sixteen: 0

  starting_gil:
    # Sets the amount of gil you will start with.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99999999
    5000: 50
    random: 0
    random-low: 0
    random-high: 0

  gate_num:
    # Sets the number of mission gates. Each gate contains four missions each. Expect an hour or more added for every gate.
    # Royal Valley or Decision Time will always be the last mission depending on options.
    #
    # Amount of locations per gate depends on number of item rewards and dispatch missions added
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 28
    6: 0
    28: 50
    random: 0
    random-low: 0
    random-high: 0

  gate_paths:
    # Sets the number of branching mission gates paths. Each must currently still
    # be progressed through to unlock the final mission.
    # Useful for higher mission gate counts.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 3
    1: 0
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  dispatch:
    # Sets the number of dispatch missions per gate. Each dispatch mission adds two locations for each gate.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 6
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  randomize_dispatch:
    # Randomizes the order of the dispatch mission. Setting only has effect is dispatch missions setting is more than 0.
    false: 50
    true: 0

  gate_items:
    # Sets how the mission gates are unlocked
    # One Mission item: Mission gates are unlocked by one mission item. Gate unlocks both encounter and dispatch missions.
    # Two Mission items: Mission gates are unlocked by two mission items. Gate unlocks both encounter and dispatch missions.
    # Dispatch mission gate: Dispatch missions are separated into their own gate sequence which each require an item.
    # Dispatch missions must be more than 0 for this setting or it will be ignored
    #
    # (Adds 1 or 2 progression items to the pool for each gate depending on the setting)
    one: 50
    two: 0
    dispatch_gate: 0

  mission_order:
    # Sets the option for the order of missions
    #
    # Linear: Missions are in order, with the first 26 being story.
    # Story as gate unlocks: The story missions in linear order will be the gate unlock mission for the first 23 gates. Every other mission is random.
    # Randomized: Missions are completely randomized
    linear: 0
    story_gate: 50
    randomized: 0

  final_mission:
    # Sets what the final mission will be between the two missions that play the credits.
    # Royal Valley: The final mission will be Royal Valley. This mission is three phases. Original final mission.
    # Decision Time: The final mission will be Decision Time. This mission is one phase.
    royal_valley: 50
    decision_time: 0

  quick_options:
    # Enables quick options by default which turn off attack names, exp popups, and turns on
    # fast text and fast cursor. All of these can be tweaked in the game options.
    false: 0
    true: 50

  force_recruitment:
    # Forces every mission to give a new recruit.
    # Disabled: Recruit chances are vanilla
    # Enabled: Every mission will give a new recruit, special recruit missions such as Mortal Snow will still
    # give their vanilla unit which is Ritz in this example.
    # Enabled Secret: Every mission will give a new recruit, special recruit missions will be random and there is a
    # chance to receive a special unit such as Ritz, Babus and Cid from any mission.
    disabled: 0
    enabled: 0
    enabled_secret: 50

  mission_reward_num:
    # Sets the number of rewards received from each mission. Must be between 2 and 6.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 2
    # Maximum value is 6
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  progressive_gates:
    # Always receive gate items in order.
    # If multiple gate paths are enabled each path will have a separate progressive item.
    # Enabled: Gate items are always received in order for each path.
    false: 0
    true: 50

  progressive_item_num:
    # Sets how many additional progressive items are added to the pool.
    # If multiple gate paths are enabled this amount is added for each path.
    # 0: There is exactly the amount of progressive items in the pool that is needed to reach the goal.
    # 1 to 10: This amount of extra progressive items is added to the pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  progressive_excess:
    # Sets what progressive items past the ones needed to reach the goal are replaced with.
    # Nothing (or 0): Excess progressive items don't give anything.
    # Random Equipment: Excess progressive items give a random non-consumable item.
    # Number between 1 and 375: Excess progressive items give the item with the corresponding id.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 375
    random: 0
    random-low: 0
    random-high: 0
    nothing: 50 # equivalent to 0
    random_equipment: 0 # equivalent to 768

  progressive_shop:
    # Adds shop upgrades to the item pool
    false: 0
    true: 50

  progressive_shop_tiers:
    # Sets how many shop upgrades there are and what items they unlock.
    # Items that are not normally sold in the shop have a default price of 1 gil.
    # Winning 10 and 20 battles will unlock the items in the first two upgrades,
    # but will not count towards the next upgrades.
    #
    # named options:
    # four_tiers: 3 shop upgrades. Starting items and first two upgrades are vanilla.
    #     The items normally unlocked by freeing some number of turfs are all in tier 3.
    # four_tiers_random: four_tiers but with random prices
    # five_tiers: 4 shop upgrades. Starting items and first two upgrades are vanilla.
    #     The items normally unlocked by freeing some number of turfs are split between tier 3 and 4.
    # five_tiers_random: five_tiers but with random prices
    # vanilla: 13 shop upgrades. Starting items and first two upgrades are vanilla.
    #     The rest have 1 item each, unlocked in the same order as freeing turfs.
    # vanilla_random: vanilla but with random prices
    # default: Same as five_tiers.
    #
    # Custom option syntax:
    # [[<Tier>], [<Tier>], [<Tier>], ...]
    #
    # <Tier> syntax:
    # [<Item>, <Item>, <Item>, ...]
    #
    # <Item> syntax:
    # [<Name>, <Price>] or <Name>
    #
    # <Price> may be a number between 1-65535, "default", "random", "random-high",
    # "random-middle", "random-low", "random-range-low-<min>-<max>", "random-range-middle-<min>-<max>",
    # "random-range-high-<min>-<max>", or "random-range-<min>-<max>".
    #
    # <Name> may be the name of any equipment or consumable item, an <ItemGroup>, or a <Random> value.
    # If only <Name> is specified, <Price> will be "default".
    #
    # <Random> may be: "random-<Groups>", "random-<Groups>-<number>", or "random-<Groups>-<min>-<max>".
    #
    # <Groups> syntax:
    # <ItemGroup>-<ItemGroup>-<ItemGroup> ...
    #
    # <ItemGroup> may be: "vanillashoptier0", "vanillashoptier1", "vanillashoptier2", "all", "weapons", "otherequipment",
    # "swords", "blades", "sabers", "knightswords", "greatswords", "broadswords", "knives", "rapiers", "katanas",
    # "staves", "rods", "maces", "bows", "greatbows", "spears", "instruments", "knuckles", "souls", "guns", "shields",
    # "helmets", "gloves", "hats", "armor", "rings", "clothing", "robes", "shoes", "consumables"
    #
    # If the same item appears more than once, only the first processed entry takes effect.
    # Entries are processed in 3 steps. Each step starts from the lowest tier:
    #     1. Directly named items.
    #     2. Items that are added as part of a group
    #     3. Random items. (Will never pick an item already added in previous steps)
    #
    # Example:
    # [
    #     [
    #         ["vanillashoptier0", "random-range-low-100-10000"],
    #         ["Elixir", "random-high"],
    #         ["Potion", "default"],
    #     ],
    #     [
    #         ["vanillashoptier1", "default"],
    #         ["random-otherequipment-20", "random-range-200-20000"],
    #         ["random-weapons-10-20", "random-range-500-50000"],
    #     ],
    #     [
    #         "vanillashoptier2",
    #         ["random-katanas-knightswords-staves-6-12", "random-range-5000-50000"],
    #     ]
    # ]
    # Before upgrades the shop will have:
    #     Vanilla items at random prices between 100 and 10000, biased towards 100.
    #     Elixirs at a random price between 1 and 65535, biased towards high numbers.
    #     Potions at default price (higher priority than the potion in vanillashoptier0).
    # The first upgrade will add:
    #     Vanilla items unlocked at 10 battles.
    #     20 non-weapon equipment at random prices between 200 and 20000.
    #     A random amount between 10 and 20 of random weapons at random prices between 500 and 50000.
    # The second upgrade will add:
    #     Vanilla items unlocked at 20 battles.
    #     A random amount between 6 and 12 of random katanas, knightswords,
    #     and staffs at random prices between 500 and 50000.
    [[['vanillashoptier0', 'default']], [['vanillashoptier1', 'default']], [['vanillashoptier2', 'default']], [['Cureall', 'default'], ['Star Armlet', 'default'], ['Bracers', 'default'], ['Hunt Bow', 'default'], ['Estreledge', 'default']], [['Temple Cloth', 'default'], ['Masamune', 'default'], ['Princess Rod', 'default'], ['Tiptaptwo', 'default'], ['Seventh Heaven', 'default'], ['Elixir', 'default']]]
